trigger:
  branches:
    exclude:
      - '*'
  - pr
  - prSourceBranch:
    - release

variables:
  buildConfiguration: 'Release'
  releaseBranchName: 'release'

stages:
- stage: 'Build'
  displayName: 'Build the web application'
  jobs:
  - job: 'Build'
    displayName: 'Build job'
    pool:
      vmImage: 'ubuntu-latest'  # Use the latest version of Ubuntu
      demands:
      - npm

    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET SDK $(dotnetSdkVersion)'
      inputs:
        version: '$(dotnetSdkVersion)'

    - task: Npm@1
      displayName: 'Run npm install'
      inputs:
        verbose: false

    - script: 'npm install -g node-sass'  # Install node-sass globally
      displayName: 'Install node-sass'

    - script: 'node-sass $(wwwrootDir) --output $(wwwrootDir)'  # Use global node-sass
      displayName: 'Compile Sass assets'

    - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > $(wwwrootDir)/buildinfo.txt'
      displayName: 'Write build info'

    - script: 'npm install -g gulp'  # Install gulp globally
      displayName: 'Install gulp'

    - script: 'gulp'  # Run gulp tasks
      displayName: 'Run gulp tasks'

    - script: 'npm install'  # Install project dependencies
      displayName: 'Install project dependencies'

    - script: 'npm run build -- --configuration $(buildConfiguration)'  # Build the project
      displayName: 'Build the project - $(buildConfiguration)'

    - script: 'npm run build'  # Build the project
      displayName: 'Build the project - $(buildConfiguration)'

    - task: ArchiveFiles@2
      displayName: 'Archive build artifacts'
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)/$(wwwrootDir)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(buildConfiguration)/build-artifact.zip'
    
    - publish: $(Build.ArtifactStagingDirectory)/$(buildConfiguration)/build-artifact.zip
      artifact: drop

- stage: 'Dev'
  displayName: 'Deploy to the dev environment'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: 'Deploy'
    pool:
      vmImage: 'ubuntu-latest'  # Use the latest version of Ubuntu
    environment: dev
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
          - task: AzureWebApp@1
            displayName: 'Azure App Service Deploy: website'
            inputs:
              azureSubscription: 'Free Trial(c2866b51-0982-4501-9733-32b999ea5577)'
              appType: 'webAppLinux'
              appName: '$(WebAppNameDev)'
              package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/build-artifact.zip'

- stage: 'Staging'
  displayName: 'Deploy to the staging environment'
  dependsOn: Dev
  jobs:
  - deployment: Deploy
    displayName: 'Deploy'
    pool:
      vmImage: 'ubuntu-latest'  # Use the latest version of Ubuntu
    environment: staging
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
          - task: AzureWebApp@1
            displayName: 'Azure App Service Deploy: website'
            inputs:
              azureSubscription: 'Free Trial(c2866b51-0982-4501-9733-32b999ea5577)'
              appType: 'webAppLinux'
              appName: 'tailspin-space-game-web-staging-11740'
              package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/build-artifact.zip'
